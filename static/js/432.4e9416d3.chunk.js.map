{"version":3,"file":"static/js/432.4e9416d3.chunk.js","mappings":"oOAKe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAQE,OANFC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GACzBJ,EAAaI,EAAIC,cAElB,KAGC,8BACAN,IAAa,SAAC,IAAD,CAAWO,KAAMP,Q,mFCbrB,SAASQ,EAAT,GAA8B,IAATD,EAAQ,EAARA,KAC5BE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGH,IAAS,IACRA,EAAKI,KAAI,SAAAC,GAAK,OACZ,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMR,IAHnB,SAMGG,EAAMM,KAAON,EAAMM,KAAON,EAAMO,SAP3BP,EAAMG,W,4GCVpBK,EAAW,+BACXC,EAAU,mCAAhB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAAS5B,IACb,OAAOmB,EAAuB,GAAD,OAAIF,EAAJ,qCAAyCC,IAGlE,SAASW,EAAiBC,GAC7B,OAAOX,EAAuB,GAAD,OAC1BF,EAD0B,iCACOC,EADP,4DACkEY","sources":["components/HomePage/HomePage.js","components/MoviesList/MoviesList.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from '../../services/api';\nimport MovieList from '../MoviesList/MoviesList';\n\n\nexport default function HomePage() {\n  const [movieList, setMovieList] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(res => {\n      setMovieList(res.results);\n    });\n  }, []);\n\n    return (\n      <>\n     {movieList && <MovieList list={movieList} />}\n      </>  \n    );\n}","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ list }) {\n  const location = useLocation();\n\n  return (\n    <ul >\n      {list !== [] &&\n        list.map(movie => (\n          <li  key={movie.id}>\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              {movie.name ? movie.name : movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n};\n\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '65d9701d0227b60ddad8e7d6a13e988e';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n   return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n  \nexport function fetchSearchMovie(searchQuery) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`,\n  );\n}\n\nexport function fetchMovieDetails(movie_id) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchMovieCredits(movie_id) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\n\nexport function fetchMovieReviews(movie_id) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["HomePage","useState","movieList","setMovieList","useEffect","fetchTrendingMovies","then","res","results","list","MovieList","location","useLocation","map","movie","to","pathname","id","state","from","name","title","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchSearchMovie","searchQuery"],"sourceRoot":""}