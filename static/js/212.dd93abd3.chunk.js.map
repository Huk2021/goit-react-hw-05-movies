{"version":3,"file":"static/js/212.dd93abd3.chunk.js","mappings":"kQAIaA,EAAeC,EAAAA,GAAAA,OAAJ,2GAOXC,EAAaD,EAAAA,GAAAA,IAAJ,0CAITE,EAAiBF,EAAAA,GAAAA,IAAJ,2FAMbG,EAAeH,EAAAA,GAAAA,IAAH,sIASZI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2HAQJM,EAAYN,EAAAA,GAAAA,IAAH,4C,SC/BhBO,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,gCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAEZ,SAASE,IAAoB,IAAD,EAC/BC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAASC,EAAAA,EAAAA,MAATD,KACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBZ,GAASa,KAAKP,KACjC,CAACN,IAMJ,OACI,gCACKK,IAAS,iCACN,SAACjB,EAAD,CAAa0B,KAAK,SAASC,QAPtB,WAAO,IAAD,IACnBN,EAAQO,KAAR,iBAAaT,QAAb,IAAaA,GAAb,UAAaA,EAAUU,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,YAM9B,sBACA,UAAC5B,EAAD,YACC,gBAAK6B,IAAG,yCAAoCd,EAAMe,aAAeC,IAAKhB,EAAMiB,MAAOC,MAAM,SAExF,UAAChC,EAAD,YACE,0BAAKc,EAAMiB,MAAX,QACA,0BAAG,6CAA6BjB,EAAMmB,iBACtC,0BAAG,2CAA2BnB,EAAMoB,eACpC,0BAAG,yCAAyBpB,EAAMqB,aAClC,wBAAG,0CACH,wBACKrB,EAAMsB,OAAOC,KAAI,SAAAC,GAAK,OACnB,wBAAqBA,EAAMC,MAAlBD,EAAME,mBAM/B,UAACvC,EAAD,YACE,SAACG,EAAD,sCACM,SAACF,EAAD,CAENuC,GAAE,kBAAahC,EAAb,SACFiB,MAAO,CACLC,KAAI,UAAEX,EAASW,YAAX,aAAE,EAAeX,UAJjB,mBASR,SAACd,EAAD,CAEEuC,GAAE,kBAAahC,EAAb,YACFiB,MAAO,CACLC,KAAMX,EAASW,MAJnB,yBAYJ,UAAC,EAAAe,SAAD,CAAUC,UAAU,uCAApB,WAEK,SAAC,KAAD,CAAOhC,KAAI,UAAKA,EAAL,SAAX,UACG,SAACN,EAAD,OAEJ,SAAC,KAAD,CAAOM,KAAI,UAAKA,EAAL,YAAX,UACI,SAACJ,EAAD,c,oLC3EVqC,EAAW,+BACXC,EAAU,mCAAhB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACb,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,qCAAyCC,IAGlE,SAASY,EAAiBC,GAC7B,OAAOZ,EAAuB,GAAD,OAC1BF,EAD0B,iCACOC,EADP,4DACkEa,IAI5F,SAASrC,EAAkBsC,GAC9B,OAAOb,EAAuB,GAAD,OAC1BF,EAD0B,kBACRe,EADQ,oBACYd,EADZ,oBAK1B,SAASe,EAAkBD,GAC9B,OAAOb,EAAuB,GAAD,OAC1BF,EAD0B,kBACRe,EADQ,4BACoBd,EADpB,oBAM1B,SAASgB,EAAkBF,GAC9B,OAAOb,EAAuB,GAAD,OAC1BF,EAD0B,kBACRe,EADQ,4BACoBd,EADpB","sources":["components/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/MovieDetailsPage/MovieDetailsPage.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\n\nexport const GoToBackBtn =  styled.button`\n  margin-bottom: 10px;\n  margin-left:5px;\n  padding: 10px;\n   cursor: pointer;\n`;\n\nexport const Container =  styled.div`\n  display: flex;\n`;\n\nexport const ContainerInfo =  styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\n\nexport const ContainerNav = styled.nav`\n margin-top: 15px;\n border-bottom : 2px solid #C0C0C0;\n border-top : 2px solid #C0C0C0;\n padding: 20px;\n\n`;\n\n\nexport const Link = styled(NavLink)`\n  margin: 15px 20px;\n  display: flex;\n  color: #000000;\n  &.active {\n    color: #FF0000;\n  }\n`;\nexport const TittleNav = styled.div`\nfont-size: 20px;\n\n`;","import {lazy, useEffect, useState,  Suspense } from \"react\";\nimport { useParams, useRouteMatch, Route,  useLocation, useHistory } from \"react-router-dom\";\nimport { fetchMovieDetails } from '../../services/api';\nimport { GoToBackBtn } from './MovieDetailsPage.styled';\nimport {Container, ContainerInfo, ContainerNav, Link,  TittleNav } from './MovieDetailsPage.styled'\n\n\nconst Cast = lazy(() => import('../Cast/Cast' /* webpackChunkName: \"Cast\" */),);\nconst Reviews = lazy(() => import('../Reviews/Reviews' /* webpackChunkName: \"Reviews\" */),);\n\nexport default function MovieDetailsPage() {\n    const { movieId } = useParams();\n    const { path } = useRouteMatch();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchMovieDetails(movieId).then(setMovie)\n    }, [movieId])\n\n    const onGoBack = () => {\n        history.push(location?.state?.from ?? '/movies');\n    }\n    \n    return (\n        <>\n            {movie && <>                \n                <GoToBackBtn type=\"button\" onClick={onGoBack} >Go back</GoToBackBtn>\n                <Container>\n                 <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title} width=\"300\" />\n                \n                  <ContainerInfo>\n                    <h2>{movie.title} </h2>\n                    <p><span >Release date: </span>{movie.release_date}</p>\n                    <p><span >Popularity: </span>{movie.popularity}</p>\n                    <p><span >Overview: </span>{movie.overview}</p>\n                    <p><span >Genres: </span></p>\n                    <ul >\n                        {movie.genres.map(genre =>\n                            <li key={genre.id} >{genre.name}</li>)}\n                    </ul>  \n                </ContainerInfo>\n             </Container>   \n            </>\n            }\n            <ContainerNav >\n              <TittleNav>Additional information</TittleNav> \n                    <Link\n              \n              to={`/movies/${movieId}/cast`}\n              state={{\n                from: location.from?.location,\n              }}\n            >\n              Cast\n            </Link>\n            <Link\n                  \n              to={`/movies/${movieId}/reviews`}\n              state={{\n                from: location.from,\n              }}\n            >\n              Reviews\n            </Link>\n                \n            </ContainerNav>\n                \n        <Suspense fallback={<h1>LOADING...</h1>}>\n         \n             <Route path={`${path}/cast`}>\n                <Cast /> \n            </Route>\n            <Route path={`${path}/reviews`}>\n                <Reviews /> \n            </Route>   \n            </Suspense>\n        </>\n    )\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '65d9701d0227b60ddad8e7d6a13e988e';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n   return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n  \nexport function fetchSearchMovie(searchQuery) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`,\n  );\n}\n\nexport function fetchMovieDetails(movie_id) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function fetchMovieCredits(movie_id) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\n\nexport function fetchMovieReviews(movie_id) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n"],"names":["GoToBackBtn","styled","Container","ContainerInfo","ContainerNav","Link","NavLink","TittleNav","Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","path","useRouteMatch","useState","movie","setMovie","location","useLocation","history","useHistory","useEffect","fetchMovieDetails","then","type","onClick","push","state","from","src","poster_path","alt","title","width","release_date","popularity","overview","genres","map","genre","name","id","to","Suspense","fallback","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovie","searchQuery","movie_id","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}